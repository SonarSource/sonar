<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.core.persistence.migration.v44.Migration44Mapper">

  <select id="selectProfileMeasures" resultType="org.sonar.core.persistence.migration.v44.ProfileMeasure">
    select pm.id as id, pm.value as profileId, pm.snapshot_id as snapshotId
    from project_measures pm
    inner join metrics m on m.id=pm.metric_id and m.name='profile'
    inner join snapshots s on s.islast=${_true} and pm.snapshot_id=s.id and s.scope='PRJ'
    where pm.value is not null
  </select>

  <select id="selectProfileVersion" resultType="int" parameterType="long">
    select pm.value from project_measures pm
    inner join metrics m on m.id=pm.metric_id and m.name='profile_version'
    inner join snapshots s on pm.snapshot_id=s.id
    where pm.value is not null and s.id=#{id}
  </select>

  <select id="selectProfileById" resultType="org.sonar.core.persistence.migration.v44.QProfileDto44" parameterType="int">
    select id, kee, name, language
    from rules_profiles
    where id=#{id}
  </select>

  <select id="selectProfileVersionDate" resultType="date" parameterType="map">
    select max(change_date) from active_rule_changes
    where profile_id=#{profileId} and profile_version=#{profileVersion}
  </select>

  <update id="updateProfileMeasure" parameterType="map">
    update project_measures
    set text_value=#{json}, value=null
    where id=#{measureId}
  </update>

  <delete id="deleteProfileMeasure" parameterType="long">
    delete from project_measures where id=#{id}
  </delete>

  <select id="selectMeasuresOnDeletedQualityProfiles" resultType="long">
     select pm.id from project_measures pm
      inner join snapshots s on s.id=pm.snapshot_id and s.islast=${_true}
      where
        pm.metric_id=(select id from metrics where name='quality_profiles')
        and pm.value is not null
  </select>

  <select id="selectAllProfiles" resultType="org.sonar.core.persistence.migration.v44.QProfileDto44">
    select id, kee, name, language from rules_profiles
  </select>

  <select id="selectProfileUpdatedAt" resultType="date" parameterType="int">
    select max(change_date) from active_rule_changes
    where profile_id=#{id}
  </select>

  <select id="selectProfileCreatedAt" resultType="date" parameterType="int">
    select min(change_date) from active_rule_changes
    where profile_id=#{id}
  </select>

  <update id="updateProfileDates" parameterType="map">
    update rules_profiles
    set created_at=#{createdAt}, updated_at=#{updatedAt}, rules_updated_at=#{rulesUpdatedAt}
    where id=#{profileId}
  </update>

  <select id="selectActiveRuleChange" parameterType="Boolean"
          resultType="org.sonar.core.persistence.migration.v44.ChangeLog">
    select
    rule_change.id as id,
    rule_change.change_date as createdAt,
    users.login as userLogin,
    rule_def.plugin_name as repository,
    rule_def.plugin_rule_key as ruleKey,
    profile.kee as profileKey,
    rule_change.new_severity as severity ,
    rule_def.name as ruleName,
    rule_def_param.name as paramKey,
    rule_param_change.new_value as paramValue
    from active_rule_changes rule_change
    left join users on users.name = rule_change.username
    left join rules rule_def on rule_def.id = rule_change.rule_id
    left join rules_profiles profile on profile.id = rule_change.profile_id
    left join active_rule_param_changes rule_param_change on rule_param_change.active_rule_change_id = rule_change.id
    left join rules_parameters rule_def_param on rule_param_change.rules_parameter_id = rule_def_param.id
    WHERE
    <choose>
      <when test="enabled != null">
        rule_change.enabled = #{enabled}
      </when>
      <otherwise>
        rule_change.enabled is null
      </otherwise>
    </choose>
    AND profile.name is not null
    AND profile.language is not null
    AND rule_def.plugin_name is not null
    AND rule_def.plugin_name is not null
    order by rule_change.id ASC
  </select>
</mapper>


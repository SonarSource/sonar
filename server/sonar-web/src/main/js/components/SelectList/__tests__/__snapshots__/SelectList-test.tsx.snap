// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should display a loader when searching 1`] = `
<div
  className="select-list"
>
  <div
    className="display-flex-center"
  >
    <RadioToggle
      className="spacer-right"
      disabled={false}
      name="filter"
      onCheck={[Function]}
      options={
        Array [
          Object {
            "disabled": false,
            "label": "selected",
            "value": "selected",
          },
          Object {
            "disabled": false,
            "label": "unselected",
            "value": "deselected",
          },
          Object {
            "disabled": false,
            "label": "all",
            "value": "all",
          },
        ]
      }
      value="selected"
    />
    <SearchBox
      autoFocus={true}
      loading={false}
      onChange={[Function]}
      placeholder="search_verb"
      value=""
    />
  </div>
  <SelectListListContainer
    elements={
      Array [
        "foo",
        "bar",
        "baz",
      ]
    }
    filter="selected"
    onSelect={[MockFunction]}
    onUnselect={[MockFunction]}
    renderElement={[Function]}
    selectedElements={
      Array [
        "foo",
      ]
    }
  />
</div>
`;

exports[`should display a loader when searching 2`] = `
<div
  className="select-list"
>
  <div
    className="display-flex-center"
  >
    <RadioToggle
      className="spacer-right"
      disabled={false}
      name="filter"
      onCheck={[Function]}
      options={
        Array [
          Object {
            "disabled": false,
            "label": "selected",
            "value": "selected",
          },
          Object {
            "disabled": false,
            "label": "unselected",
            "value": "deselected",
          },
          Object {
            "disabled": false,
            "label": "all",
            "value": "all",
          },
        ]
      }
      value="selected"
    />
    <SearchBox
      autoFocus={true}
      loading={false}
      onChange={[Function]}
      placeholder="search_verb"
      value=""
    />
  </div>
  <SelectListListContainer
    elements={
      Array [
        "foo",
        "bar",
        "baz",
      ]
    }
    filter="selected"
    onSelect={[MockFunction]}
    onUnselect={[MockFunction]}
    renderElement={[Function]}
    selectedElements={
      Array [
        "foo",
      ]
    }
  />
</div>
`;

exports[`should display a loader when updating filter 1`] = `
<div
  className="select-list"
>
  <div
    className="display-flex-center"
  >
    <RadioToggle
      className="spacer-right"
      disabled={false}
      name="filter"
      onCheck={[Function]}
      options={
        Array [
          Object {
            "disabled": false,
            "label": "selected",
            "value": "selected",
          },
          Object {
            "disabled": false,
            "label": "unselected",
            "value": "deselected",
          },
          Object {
            "disabled": false,
            "label": "all",
            "value": "all",
          },
        ]
      }
      value="selected"
    />
    <SearchBox
      autoFocus={true}
      loading={false}
      onChange={[Function]}
      placeholder="search_verb"
      value=""
    />
  </div>
  <SelectListListContainer
    elements={
      Array [
        "foo",
        "bar",
        "baz",
      ]
    }
    filter="selected"
    onSelect={[MockFunction]}
    onUnselect={[MockFunction]}
    renderElement={[Function]}
    selectedElements={
      Array [
        "foo",
      ]
    }
  />
</div>
`;

exports[`should display a loader when updating filter 2`] = `
<div
  className="select-list"
>
  <div
    className="display-flex-center"
  >
    <RadioToggle
      className="spacer-right"
      disabled={false}
      name="filter"
      onCheck={[Function]}
      options={
        Array [
          Object {
            "disabled": false,
            "label": "selected",
            "value": "selected",
          },
          Object {
            "disabled": false,
            "label": "unselected",
            "value": "deselected",
          },
          Object {
            "disabled": false,
            "label": "all",
            "value": "all",
          },
        ]
      }
      value="selected"
    />
    <SearchBox
      autoFocus={true}
      loading={false}
      onChange={[Function]}
      placeholder="search_verb"
      value=""
    />
  </div>
  <SelectListListContainer
    elements={
      Array [
        "foo",
        "bar",
        "baz",
      ]
    }
    filter="selected"
    onSelect={[MockFunction]}
    onUnselect={[MockFunction]}
    renderElement={[Function]}
    selectedElements={
      Array [
        "foo",
      ]
    }
  />
</div>
`;

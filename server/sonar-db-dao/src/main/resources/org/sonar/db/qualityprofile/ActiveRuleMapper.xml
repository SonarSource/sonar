<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.sonar.db.qualityprofile.ActiveRuleMapper">

  <sql id="activeRuleKeyColumns">
    a.id,
    a.profile_id as "profileId",
    a.rule_id as "ruleId",
    a.failure_level as "severity",
    a.inheritance as "inheritance",
    r.plugin_rule_key as "rulefield",
    r.plugin_name as "repository",
    oqp.uuid as "profileKey",
    a.created_at as "createdAt",
    a.updated_at as "updatedAt"
  </sql>

  <sql id="activeRuleKeyJoin">
    inner join rules_profiles rp on rp.id = a.profile_id
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
    inner join rules r on r.id = a.rule_id
  </sql>

  <insert id="insert" parameterType="ActiveRule" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    insert into active_rules (profile_id, rule_id, failure_level, inheritance, created_at, updated_at)
    values (#{profileId}, #{ruleId}, #{severity}, #{inheritance}, #{createdAt}, #{updatedAt})
  </insert>

  <update id="update" parameterType="ActiveRule">
    UPDATE active_rules SET
    failure_level=#{severity},
    inheritance=#{inheritance},
    updated_at=#{updatedAt}
    WHERE id=#{id, jdbcType=BIGINT}
  </update>

  <delete id="delete" parameterType="int">
    DELETE FROM active_rules WHERE id=#{id, jdbcType=BIGINT}
  </delete>

  <update id="deleteByProfileUuids" parameterType="String">
    delete from active_rules
    where exists (
      select 1
      from org_qprofiles oqp
      inner join rules_profiles rp on rp.kee = oqp.rules_profile_uuid
      where rp.id = profile_id and oqp.uuid in
        <foreach collection="profileUuids" open="(" close=")" item="profileUuid" separator=",">#{profileUuid, jdbcType=VARCHAR}</foreach>
      )
  </update>

  <select id="selectByKey" parameterType="map" resultType="ActiveRule">
    SELECT
    <include refid="activeRuleKeyColumns"/>
    FROM active_rules a
    <include refid="activeRuleKeyJoin"/>
    WHERE
    oqp.uuid = #{profileUuid, jdbcType=VARCHAR}
    AND r.plugin_rule_key = #{rule, jdbcType=VARCHAR}
    AND r.plugin_name = #{repository, jdbcType=VARCHAR}
  </select>

  <select id="selectByKeys" parameterType="map" resultType="ActiveRule">
    SELECT
    <include refid="activeRuleKeyColumns"/>
    FROM active_rules a
    <include refid="activeRuleKeyJoin"/>
    WHERE
    <foreach collection="keys" item="key" open="(" separator=" or " close=")">
      (oqp.uuid = #{key.qualityProfileKey, jdbcType=VARCHAR}
      AND r.plugin_rule_key = #{key.ruleKey.rule, jdbcType=VARCHAR}
      AND r.plugin_name = #{key.ruleKey.repository, jdbcType=VARCHAR}
      )
    </foreach>
  </select>

  <select id="selectByProfileUuid" parameterType="string" resultType="ActiveRule">
    select
    <include refid="activeRuleKeyColumns"/>
    from active_rules a
    inner join rules_profiles rp on rp.id = a.profile_id
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
    inner join rules r on r.id = a.rule_id and r.status != 'REMOVED'
    where oqp.uuid = #{id, jdbcType=VARCHAR}
  </select>

  <select id="selectByRuleId" parameterType="map" resultType="ActiveRule">
    SELECT
    <include refid="activeRuleKeyColumns"/>
    FROM active_rules a
    <include refid="activeRuleKeyJoin"/>
    WHERE a.rule_id = #{ruleId, jdbcType=BIGINT}
    AND oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
  </select>

  <select id="selectByRuleIdOfAllOrganizations" parameterType="Integer" resultType="ActiveRule">
    SELECT
    <include refid="activeRuleKeyColumns"/>
    FROM active_rules a
    <include refid="activeRuleKeyJoin"/>
    WHERE a.rule_id = #{ruleId, jdbcType=BIGINT}
  </select>

  <select id="selectByRuleIds" parameterType="List" resultType="ActiveRule">
    SELECT
    <include refid="activeRuleKeyColumns"/>
    FROM active_rules a
    <include refid="activeRuleKeyJoin"/>
    WHERE
    a.rule_id in
    <foreach collection="ruleIds" item="ruleId" separator="," open="(" close=")">
      #{ruleId, jdbcType=BIGINT}
    </foreach>
    and oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
  </select>

  <!-- Parameters -->

  <sql id="activeRuleParamColumns">
    p.id,
    p.active_rule_id as activeRuleId,
    p.rules_parameter_id as rulesParameterId,
    p.rules_parameter_key as kee,
    p.value as value
  </sql>

  <insert id="insertParameter" parameterType="ActiveRuleParam" keyColumn="id" useGeneratedKeys="true" keyProperty="id">
    insert into active_rule_parameters (
      active_rule_id,
      rules_parameter_id,
      rules_parameter_key,
      value
    ) values (
      #{activeRuleId, jdbcType=BIGINT},
      #{rulesParameterId, jdbcType=BIGINT},
      #{key, jdbcType=VARCHAR},
      #{value, jdbcType=VARCHAR}
    )
  </insert>

  <update id="updateParameter" parameterType="ActiveRuleParam">
    UPDATE active_rule_parameters SET
    value=#{value, jdbcType=VARCHAR}
    WHERE id=#{id, jdbcType=BIGINT}
  </update>

  <delete id="deleteParameters" parameterType="int">
    DELETE FROM active_rule_parameters WHERE active_rule_id=#{id, jdbcType=BIGINT}
  </delete>

  <delete id="deleteParametersByProfileUuids" parameterType="String">
    delete from active_rule_parameters
    where exists (
      select 1 from active_rules ar
      inner join rules_profiles rp on rp.id = ar.profile_id
      inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
      where ar.id = active_rule_id
      and oqp.uuid in
        <foreach collection="profileUuids" open="(" close=")" item="profileUuid" separator=",">
        #{profileUuid, jdbcType=VARCHAR}
        </foreach>
    )
  </delete>

  <delete id="deleteParameter" parameterType="int">
    DELETE FROM active_rule_parameters WHERE id=#{id, jdbcType=BIGINT}
  </delete>

  <select id="selectParamsByActiveRuleId" parameterType="Integer" resultType="ActiveRuleParam">
    select
    <include refid="activeRuleParamColumns"/>
    from active_rule_parameters p
    <where>
      p.active_rule_id=#{id, jdbcType=BIGINT}
    </where>
  </select>

  <select id="selectParamsByActiveRuleIds" parameterType="map" resultType="ActiveRuleParam">
    select
    <include refid="activeRuleParamColumns"/>
    from active_rule_parameters p
    <where>
      <foreach collection="ids" item="id" open="(" separator=" or " close=")">
        p.active_rule_id=#{id, jdbcType=BIGINT}
      </foreach>
    </where>
  </select>

  <select id="selectParamByActiveRuleAndKey" parameterType="map" resultType="ActiveRuleParam">
    SELECT
    <include refid="activeRuleParamColumns"/>
    FROM active_rule_parameters p
    <where>
      AND p.active_rule_id=#{activeRuleId, jdbcType=BIGINT}
      AND p.rules_parameter_key=#{key, jdbcType=VARCHAR}
    </where>
  </select>

  <select id="selectAllParams" resultType="ActiveRuleParam">
    select
    <include refid="activeRuleParamColumns"/>
    from active_rule_parameters p
  </select>

  <select id="countActiveRulesByProfileUuid" resultType="KeyLongValue" parameterType="map">
    select oqp.uuid as "key", count(ar.id) as "value"
    from active_rules ar
    inner join rules_profiles rp on rp.id = ar.profile_id
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
    inner join rules r on r.id = ar.rule_id
    where oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
    and r.status != 'REMOVED'
    group by oqp.uuid
  </select>

  <select id="countActiveRulesForRuleStatusByProfileUuid" resultType="KeyLongValue" parameterType="map">
    select oqp.uuid as "key", count(ar.id) as "value"
    from active_rules ar
    inner join rules_profiles rp on rp.id = ar.profile_id
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
    inner join rules r on r.id = ar.rule_id
    where oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
    and r.status = #{ruleStatus, jdbcType=VARCHAR}
    group by oqp.uuid
  </select>

  <select id="countActiveRulesForInheritanceByProfileUuid" resultType="KeyLongValue" parameterType="map">
    select oqp.uuid as "key", count(ar.id) as "value"
    from active_rules ar
    inner join rules_profiles rp on rp.id = ar.profile_id
    inner join org_qprofiles oqp on oqp.rules_profile_uuid = rp.kee
    inner join rules r on r.id = ar.rule_id
    where oqp.organization_uuid = #{organizationUuid, jdbcType=VARCHAR}
    and ar.inheritance = #{inheritance, jdbcType=VARCHAR}
    and r.status != 'REMOVED'
    group by oqp.uuid
  </select>
</mapper>

